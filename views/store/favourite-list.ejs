<%- include('../partials/head') %>   
<%- include('../partials/nav') %>  

<div class="min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 relative overflow-hidden">
  <!-- Animated Background Elements -->
  <div class="fixed inset-0 overflow-hidden pointer-events-none">
    <div class="absolute -top-40 -right-40 w-96 h-96 bg-gradient-to-br from-blue-500 to-purple-500 rounded-full mix-blend-multiply filter blur-3xl opacity-20 animate-pulse"></div>
    <div class="absolute -bottom-40 -left-40 w-96 h-96 bg-gradient-to-br from-pink-500 to-red-500 rounded-full mix-blend-multiply filter blur-3xl opacity-20 animate-pulse animation-delay-2000"></div>
    <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-gradient-to-br from-cyan-500 to-blue-500 rounded-full mix-blend-multiply filter blur-3xl opacity-20 animate-pulse animation-delay-4000"></div>
  </div>

  <div class="relative container mx-auto px-4 py-12 z-10">
    <!-- Main Header -->
    <div class="text-center mb-16">
      <h1 class="text-5xl md:text-6xl lg:text-6xl font-black text-white mb-4 drop-shadow-2xl">
        Here are your
        <span class="text-4xl md:text-5xl lg:text-6xl bg-gradient-to-r from-yellow-400 to-orange-400 bg-clip-text text-transparent">
        Favourites
        </span>
      </h1>
      
      <p class="text-xl md:text-2xl text-gray-200 font-light max-w-3xl mx-auto leading-relaxed mt-8 drop-shadow-lg">
        Your curated collection of amazing homes ‚ú®
      </p>
      
      <div class="mt-8 flex justify-center">
        <div class="h-1 w-24 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full animate-pulse"></div>
      </div>
    </div>

    <!-- Properties Grid -->
    <div class="flex flex-wrap justify-center gap-8 max-w-7xl mx-auto">
      <% favouriteHomes.forEach(home => { %> 
        <div class="group relative w-full max-w-sm flex-shrink-0">
          
          <!-- Main Card -->
          <div class="relative bg-white/10 backdrop-blur-xl rounded-2xl overflow-hidden border border-white/20 shadow-2xl transform group-hover:-translate-y-2 group-hover:scale-105 transition-all duration-500">
            
            <!-- Image Section -->
            <div class="relative overflow-hidden">
              <img src="<%= home.image %>" alt="<%= home.name %>" class="w-full h-56 object-cover transform group-hover:scale-110 transition-transform duration-700">
              
              <!-- Gradient Overlay -->
              <div class="absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              
              <!-- Rating Badge -->
              <div class="absolute top-4 right-4 bg-gradient-to-r from-yellow-400 to-orange-500 text-white rounded-full px-3 py-1 flex items-center shadow-lg transform group-hover:scale-110 transition-transform duration-300">
                <span class="text-sm font-bold">‚≠ê <%= home.rating %></span>
              </div>
            </div>
            
            <!-- Content Section -->
            <div class="p-6 bg-gradient-to-b from-white/15 to-white/5 backdrop-blur-sm">
              <!-- Home Name -->
              <h3 class="text-xl font-bold text-white mb-3 truncate drop-shadow-lg">
                <%= home.name %>
              </h3>
              
              <!-- Location -->
              <div class="flex items-center mb-4 text-gray-200">
                <svg class="w-4 h-4 mr-2 text-purple-400" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path>
                </svg>
                <span class="text-sm font-medium truncate"><%= home.location %></span>
              </div>
              
              <!-- Price -->
              <div class="mb-6">
                <div class="text-2xl font-black text-white drop-shadow-lg">
                  <span class="bg-gradient-to-r from-green-400 to-emerald-400 bg-clip-text text-transparent">‚Çπ<%= home.price %></span>
                </div>
                <div class="text-sm text-gray-300 font-medium">per night</div>
              </div>
              
              <!-- Remove Button -->
              <div class="w-full">
                <form action="/favourites/delete/<%= home._id %>" method="POST">
                  <button type="submit" class="bg-gradient-to-r from-pink-500 to-rose-500 hover:from-pink-600 hover:to-rose-600 text-white font-bold px-4 py-3 rounded-xl shadow-lg transition-all duration-300 transform hover:scale-105">
                    üíî Remove from Favourites
                  </button>
                    </span>
                  </button>
                </form>
              </div>
            </div>
          </div>
        </div>
      <% }) %>
    </div>
  </div>
</div>

<style>
  @keyframes pulse {
    0%, 100% { opacity: 0.2; }
    50% { opacity: 0.4; }
  }
  
  .animation-delay-2000 {
    animation-delay: 2s;
  }
  
  .animation-delay-4000 {
    animation-delay: 4s;
  }
  
  .animate-pulse {
    animation: pulse 3s ease-in-out infinite;
  }
  
  /* Glassmorphism effect */
  .backdrop-blur-xl {
    backdrop-filter: blur(16px);
  }
  
  .backdrop-blur-sm {
    backdrop-filter: blur(4px);
  }
  
  /* Hover animations */
  .group:hover .transform {
    transform: translateY(-8px) scale(1.05);
  }
  
  /* Text shadow for better readability */
  .drop-shadow-lg {
    filter: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));
  }
  
  .drop-shadow-2xl {
    filter: drop-shadow(0 25px 25px rgb(0 0 0 / 0.15));
  }

/* Blinking Stars Styles */
  .star {
    position: fixed;
    color: white;
    font-size: 12px;
    pointer-events: none;
    z-index: 5;
    text-shadow: 0 0 6px rgba(255, 255, 255, 0.8);
  }

  @keyframes blink {
    0%, 50% { opacity: 0; }
    51%, 100% { opacity: 1; }
  }

  @keyframes twinkle {
    0%, 100% { opacity: 0.3; transform: scale(1); }
    50% { opacity: 1; transform: scale(1.2); }
  }

  .star-blink {
    animation: blink 2s infinite;
  }

  .star-twinkle {
    animation: twinkle 3s infinite;
  }

  .star-slow {
    animation: blink 4s infinite;
  }
</style>

<script>
  // Blinking Stars Script
  function createStars() {
    const starContainer = document.body;
    const numberOfStars = 50;
    const starSymbols = ['‚ú¶', '‚úß', '‚≠ê', '‚ú®', '‚ãÜ', '‚òÖ', '‚òÜ'];
    const animationClasses = ['star-blink', 'star-twinkle', 'star-slow'];

    for (let i = 0; i < numberOfStars; i++) {
      const star = document.createElement('div');
      star.className = 'star';
      
      // Random star symbol
      star.textContent = starSymbols[Math.floor(Math.random() * starSymbols.length)];
      
      // Random position
      let left = Math.random() * 100;
      let top = Math.random() * 100;
      
      // Check if star would overlap with signup box area (roughly center area)
      // Signup box is roughly centered, so avoid the middle 40% width and height
      const signupBoxLeft = 30; // roughly 30% from left
      const signupBoxRight = 70; // roughly 70% from left
      const signupBoxTop = 20; // roughly 20% from top
      const signupBoxBottom = 80; // roughly 80% from top
      
      // If star would be in signup box area, reposition it
      if (left > signupBoxLeft && left < signupBoxRight && top > signupBoxTop && top < signupBoxBottom) {
        // Move to edges instead
        if (Math.random() < 0.5) {
          left = Math.random() < 0.5 ? Math.random() * 25 : 75 + Math.random() * 25; // left or right edge
        } else {
          top = Math.random() < 0.5 ? Math.random() * 15 : 85 + Math.random() * 15; // top or bottom edge
        }
      }
      
      star.style.left = left + '%';
      star.style.top = top + '%';
      
      // Random size
      const size = Math.random() * 8 + 8; // 8px to 16px
      star.style.fontSize = size + 'px';
      
      // Random animation
      const animationClass = animationClasses[Math.floor(Math.random() * animationClasses.length)];
      star.classList.add(animationClass);
      
      // Random animation delay
      star.style.animationDelay = Math.random() * 3 + 's';
      
      // Random opacity
      star.style.opacity = Math.random() * 0.8 + 0.2;
      
      starContainer.appendChild(star);
    }
  }

  // Create stars when page loads
  document.addEventListener('DOMContentLoaded', createStars);

  // Optional: Add more stars periodically
  setInterval(() => {
    // Remove old stars occasionally to prevent too many elements
    const existingStars = document.querySelectorAll('.star');
    if (existingStars.length > 100) {
      existingStars[0].remove();
    }
    
    // Add a new star occasionally
    if (Math.random() < 0.1) { // 10% chance every interval
      const star = document.createElement('div');
      star.className = 'star star-twinkle';
      star.textContent = ['‚ú¶', '‚úß', '‚≠ê', '‚ú®', '‚ãÜ'][Math.floor(Math.random() * 5)];
      
      let left = Math.random() * 100;
      let top = Math.random() * 100;
      
      // Avoid signup box area for new stars too
      const signupBoxLeft = 30;
      const signupBoxRight = 70;
      const signupBoxTop = 20;
      const signupBoxBottom = 80;
      
      if (left > signupBoxLeft && left < signupBoxRight && top > signupBoxTop && top < signupBoxBottom) {
        if (Math.random() < 0.5) {
          left = Math.random() < 0.5 ? Math.random() * 25 : 75 + Math.random() * 25;
        } else {
          top = Math.random() < 0.5 ? Math.random() * 15 : 85 + Math.random() * 15;
        }
      }
      
      star.style.left = left + '%';
      star.style.top = top + '%';
      star.style.fontSize = (Math.random() * 8 + 8) + 'px';
      star.style.animationDelay = Math.random() * 3 + 's';
      star.style.opacity = Math.random() * 0.8 + 0.2;
      document.body.appendChild(star);
    }
  }, 5000); // Check every 5 seconds
</script>