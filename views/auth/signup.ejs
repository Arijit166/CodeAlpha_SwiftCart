<%- include('../partials/head') %>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <style>
    /* Prevent any background color changes on input fields */
    input:-webkit-autofill,
    input:-webkit-autofill:hover,
    input:-webkit-autofill:focus,
    input:-webkit-autofill:active {
      -webkit-box-shadow: 0 0 0 1000px rgba(255, 255, 255, 0.2) inset !important;
      -webkit-text-fill-color: white !important;
      background-color: rgba(255, 255, 255, 0.2) !important;
      transition: background-color 5000s ease-in-out 0s !important;
    }
    
    /* Force consistent styling for all input states */
    input {
      background-color: rgba(255, 255, 255, 0.2) !important;
      color: white !important;
    }
    
    /* Override any browser default styling */
    input[type="text"],
    input[type="email"],
    input[type="password"],
    input[type="text"]:focus,
    input[type="email"]:focus,
    input[type="password"]:focus {
      background-color: rgba(255, 255, 255, 0.2) !important;
      color: white !important;
    }
  </style>
  </head>
  <body class="min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 relative">
    <%- include('../partials/nav') %>
    <main class="container mx-auto mt-4 p-4 pb-8">
      
      <div class="text-center mb-16">
        <h1 class="text-4xl md:text-5xl lg:text-6xl font-black text-white mb-4 drop-shadow-2xl">
          <span class="block text-2xl md:text-5xl lg:text-5xl text-white">
            Create Your Account on
          </span>
          <span class="bg-gradient-to-r from-cyan-400 via-purple-300 to-pink-300 bg-clip-text text-transparent">
            Homezy
          </span>
        </h1>
        
        <div class="mt-8 flex justify-center">
          <div class="h-1 w-24 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full"></div>
        </div>
      </div>
      
      <div class="max-w-2xl mx-auto bg-white/10 backdrop-blur-sm rounded-3xl shadow-2xl p-6 border border-white/20">
        <form action="/signup" method="POST" class="space-y-4">
          <%- include('../partials/errors') %> 
          
          <!-- Name fields in a flex layout -->
          <div class="flex gap-4">
            <div class="flex-1">
              <div class="relative">
                <span class="absolute inset-y-0 left-0 flex items-center pl-6 text-white/70">
                  <i class="fas fa-user"></i>
                </span>
                <input
                  type="text"
                  id="firstName"
                  name="firstName"
                  placeholder="First Name"
                  value="<%= oldInput.firstName ? oldInput.firstName : '' %>"
                  class="w-full pl-16 px-6 py-4 bg-white/20 backdrop-blur-sm border border-white/30 rounded-2xl text-white placeholder-white/70 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-transparent transition duration-300 autofill:bg-white/20 autofill:text-white"
                  required />
              </div>
            </div>
            
            <div class="flex-1">
              <div class="relative">
                <span class="absolute inset-y-0 left-0 flex items-center pl-6 text-white/70">
                  <i class="fas fa-user"></i>
                </span>
                <input
                  type="text"
                  id="lastName"
                  name="lastName"
                  value="<%= oldInput.lastName ? oldInput.lastName : '' %>"
                  placeholder="Last Name"
                  class="w-full pl-16 px-6 py-4 bg-white/20 backdrop-blur-sm border border-white/30 rounded-2xl text-white placeholder-white/70 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-transparent transition duration-300 autofill:bg-white/20 autofill:text-white" />
              </div>
            </div>
          </div>
          
          <!-- Email field -->
          <div class="relative">
            <span class="absolute inset-y-0 left-0 flex items-center pl-6 text-white/70">
              <i class="fas fa-envelope"></i>
            </span>
            <input
              type="email"
              id="email"
              name="email"
              value="<%= oldInput.email ? oldInput.email : '' %>"
              placeholder="your.email@example.com"
              class="w-full pl-16 px-6 py-4 bg-white/20 backdrop-blur-sm border border-white/30 rounded-2xl text-white placeholder-white/70 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-transparent transition duration-300 autofill:bg-white/20 autofill:text-white"
              required />
          </div>
          
          <!-- Password fields -->
          <div class="relative">
            <span class="absolute inset-y-0 left-0 flex items-center pl-6 text-white/70">
              <i class="fas fa-lock"></i>
            </span>
            <input
              type="password"
              id="password"
              name="password"
              placeholder="Enter Your Password"
              class="w-full pl-16 px-6 py-4 bg-white/20 backdrop-blur-sm border border-white/30 rounded-2xl text-white placeholder-white/70 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-transparent transition duration-300 autofill:bg-white/20 autofill:text-white"
              required/>
          </div>
          
          <div class="relative">
            <span class="absolute inset-y-0 left-0 flex items-center pl-6 text-white/70">
              <i class="fas fa-lock"></i>
            </span>
            <input
              type="password"
              id="confirmPassword"
              name="confirmPassword"
              placeholder="Confirm Your Password"
              class="w-full pl-16 px-6 py-4 bg-white/20 backdrop-blur-sm border border-white/30 rounded-2xl text-white placeholder-white/70 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-transparent transition duration-300 autofill:bg-white/20 autofill:text-white"
              required/>
          </div>

          <!-- User type selection with better styling -->
          <div class="p-6 bg-white/10 backdrop-blur-sm rounded-2xl border border-white/20">
            <p class="text-sm font-medium text-white/90 mb-4">I want to register as:</p>
            <div class="flex space-x-8">
              <label class="inline-flex items-center cursor-pointer text-white/80 hover:text-white transition duration-300">
                <input type="radio" name="userType" value="guest" id="guest" class="form-radio text-purple-400 focus:ring-purple-400 bg-white/20 border-white/30" checked="<% oldInput.userType === "guest"%>" />
                <span class="ml-3 font-medium">Guest</span>
              </label>
              <label class="inline-flex items-center cursor-pointer text-white/80 hover:text-white transition duration-300">
                <input type="radio" name="userType" value="host" id="host" class="form-radio text-purple-400 focus:ring-purple-400 bg-white/20 border-white/30" checked="<% oldInput.userType === "host"%>"/>
                <span class="ml-3 font-medium">Host</span>
              </label>
            </div>
          </div>

          <!-- Terms and conditions -->
          <div class="p-6 bg-white/10 backdrop-blur-sm rounded-2xl border border-white/20">
            <label class="inline-flex items-center cursor-pointer text-white/80 hover:text-white transition duration-300">
              <input type="checkbox" name="terms" id="terms" class="form-checkbox text-purple-400 focus:ring-purple-400 bg-white/20 border-white/30 rounded" required />
              <span class="ml-3 font-medium">I agree to the <a href="#" class="text-cyan-300 hover:text-cyan-200 hover:underline transition duration-300">terms and conditions</a></span>
            </label>
          </div> 

          <!-- Submit button with animation -->
          <button type="submit" class="w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white text-center py-4 px-6 rounded-2xl font-bold transition-all duration-300 shadow-lg transform hover:scale-105 hover:shadow-xl flex items-center justify-center">
            <span>Register</span>
            <i class="fas fa-arrow-right ml-2"></i>
          </button>
          
          <!-- Login link -->
          <p class="text-center mt-6 text-white/80">
            Already have an account? <a href="/login" class="text-cyan-300 hover:text-cyan-200 hover:underline transition duration-300">Log in</a>
          </p>
        </form>
      </div>
    </main>
  </body>
</html>
<style>
/* Blinking Stars Styles */
  .star {
    position: absolute;
    color: white;
    font-size: 12px;
    pointer-events: none;
    z-index: 5;
    text-shadow: 0 0 6px rgba(255, 255, 255, 0.8);
  }

  @keyframes blink {
    0%, 50% { opacity: 0; }
    51%, 100% { opacity: 1; }
  }

  @keyframes twinkle {
    0%, 100% { opacity: 0.3; transform: scale(1); }
    50% { opacity: 1; transform: scale(1.2); }
  }

  .star-blink {
    animation: blink 2s infinite;
  }

  .star-twinkle {
    animation: twinkle 3s infinite;
  }

  .star-slow {
    animation: blink 4s infinite;
  }
</style>

<script>
  // Blinking Stars Script
  function createStars() {
    const starContainer = document.body;
    const numberOfStars = 50;
    const starSymbols = ['✦', '✧', '⭐', '✨', '⋆', '★', '☆'];
    const animationClasses = ['star-blink', 'star-twinkle', 'star-slow'];

    for (let i = 0; i < numberOfStars; i++) {
      const star = document.createElement('div');
      star.className = 'star';
      
      // Random star symbol
      star.textContent = starSymbols[Math.floor(Math.random() * starSymbols.length)];
      
      // Random position
      let left = Math.random() * 100;
      let top = Math.random() * 100;
      
      // More precise check for signup box area
      const signupBox = document.querySelector('.max-w-2xl');
      if (signupBox) {
        const rect = signupBox.getBoundingClientRect();
        const windowWidth = window.innerWidth;
        const windowHeight = window.innerHeight;
        
        // Convert to percentage
        const signupBoxLeft = (rect.left / windowWidth) * 100;
        const signupBoxRight = (rect.right / windowWidth) * 100;
        const signupBoxTop = (rect.top / windowHeight) * 100;
        const signupBoxBottom = (rect.bottom / windowHeight) * 100;
        
        // If star would be in signup box area with some padding, reposition it
        if (left > signupBoxLeft - 5 && left < signupBoxRight + 5 && 
            top > signupBoxTop - 5 && top < signupBoxBottom + 5) {
          // Move to edges instead
          if (Math.random() < 0.5) {
            left = Math.random() < 0.5 ? Math.random() * 20 : 80 + Math.random() * 20;
          } else {
            top = Math.random() < 0.5 ? Math.random() * 10 : 90 + Math.random() * 10;
          }
        }
      }
      
      star.style.left = left + '%';
      star.style.top = top + '%';
      
      // Random size
      const size = Math.random() * 8 + 8; // 8px to 16px
      star.style.fontSize = size + 'px';
      
      // Random animation
      const animationClass = animationClasses[Math.floor(Math.random() * animationClasses.length)];
      star.classList.add(animationClass);
      
      // Random animation delay
      star.style.animationDelay = Math.random() * 3 + 's';
      
      // Random opacity
      star.style.opacity = Math.random() * 0.8 + 0.2;
      
      starContainer.appendChild(star);
    }
  }

  // Create stars when page loads
  document.addEventListener('DOMContentLoaded', () => {
    setTimeout(createStars, 100); // Small delay to ensure DOM is ready
  });

  // Optional: Add more stars periodically
  setInterval(() => {
    // Remove old stars occasionally to prevent too many elements
    const existingStars = document.querySelectorAll('.star');
    if (existingStars.length > 100) {
      existingStars[0].remove();
    }
    
    // Add a new star occasionally
    if (Math.random() < 0.1) { // 10% chance every interval
      const star = document.createElement('div');
      star.className = 'star star-twinkle';
      star.textContent = ['✦', '✧', '⭐', '✨', '⋆'][Math.floor(Math.random() * 5)];
      
      let left = Math.random() * 100;
      let top = Math.random() * 100;
      
      // Avoid signup box area for new stars too
      const signupBox = document.querySelector('.max-w-2xl');
      if (signupBox) {
        const rect = signupBox.getBoundingClientRect();
        const windowWidth = window.innerWidth;
        const windowHeight = window.innerHeight;
        
        const signupBoxLeft = (rect.left / windowWidth) * 100;
        const signupBoxRight = (rect.right / windowWidth) * 100;
        const signupBoxTop = (rect.top / windowHeight) * 100;
        const signupBoxBottom = (rect.bottom / windowHeight) * 100;
        
        if (left > signupBoxLeft - 5 && left < signupBoxRight + 5 && 
            top > signupBoxTop - 5 && top < signupBoxBottom + 5) {
          if (Math.random() < 0.5) {
            left = Math.random() < 0.5 ? Math.random() * 20 : 80 + Math.random() * 20;
          } else {
            top = Math.random() < 0.5 ? Math.random() * 10 : 90 + Math.random() * 10;
          }
        }
      }
      
      star.style.left = left + '%';
      star.style.top = top + '%';
      star.style.fontSize = (Math.random() * 8 + 8) + 'px';
      star.style.animationDelay = Math.random() * 3 + 's';
      star.style.opacity = Math.random() * 0.8 + 0.2;
      document.body.appendChild(star);
    }
  }, 5000); // Check every 5 seconds
</script>