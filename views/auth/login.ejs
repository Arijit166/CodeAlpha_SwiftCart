<%- include('../partials/head') %>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <style>
    /* Prevent any background color changes on input fields */
    input:-webkit-autofill,
    input:-webkit-autofill:hover,
    input:-webkit-autofill:focus,
    input:-webkit-autofill:active {
      -webkit-box-shadow: 0 0 0 1000px rgba(255, 255, 255, 0.2) inset !important;
      -webkit-text-fill-color: white !important;
      background-color: rgba(255, 255, 255, 0.2) !important;
      transition: background-color 5000s ease-in-out 0s !important;
    }
    
    /* Force consistent styling for all input states */
    input {
      background-color: rgba(255, 255, 255, 0.2) !important;
      color: white !important;
    }
    
    /* Override any browser default styling */
    
    input[type="email"]:focus,
    input[type="password"]:focus {
      background-color: rgba(255, 255, 255, 0.2) !important;
      color: white !important;
    }
  </style>
  </head>
  <body class="min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 relative">
    <%- include('../partials/nav') %>
    <main class="container mx-auto mt-4 p-4 pb-8">
      
      <div class="text-center mb-16">
        <h1 class="text-4xl md:text-5xl lg:text-6xl font-black text-white mb-4 drop-shadow-2xl">
          <span class="block text-2xl md:text-5xl lg:text-5xl text-white">
            Welcome Back to
          </span>
          <span class="bg-gradient-to-r from-cyan-400 via-purple-300 to-pink-300 bg-clip-text text-transparent animate-pulse">
            SwiftCart
          </span>
        </h1>
        
        <div class="mt-8 flex justify-center">
          <div class="h-1 w-24 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full animate-pulse"></div>
        </div>
      </div>
      
      <div class="max-w-2xl mx-auto bg-white/10 backdrop-blur-sm rounded-3xl shadow-2xl p-6 border border-white/20 relative z-10">
        <form action="/login" method="POST" class="space-y-4">
          <%- include('../partials/errors') %>
         
          <!-- Email field -->
          <div class="relative">
            <span class="absolute inset-y-0 left-0 flex items-center pl-6 text-white/70">
              <i class="fas fa-envelope"></i>
            </span>
            <input
              type="email"
              id="email"
              name="email"
              placeholder="Enter your email"
              value="<%= oldInput.email ? oldInput.email : '' %>"
              class="w-full pl-16 px-6 py-4 bg-white/20 backdrop-blur-sm border border-white/30 rounded-2xl text-white placeholder-white/70 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-transparent transition duration-300"
              required />
          </div>
         
          <!-- Password field -->
          <div class="relative">
            <span class="absolute inset-y-0 left-0 flex items-center pl-6 text-white/70">
              <i class="fas fa-lock"></i>
            </span>
            <input
              type="password"
              id="password"
              name="password"
              placeholder="Enter Your Password"
              class="w-full pl-16 px-6 py-4 bg-white/20 backdrop-blur-sm border border-white/30 rounded-2xl text-white placeholder-white/70 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-transparent transition duration-300"
              required/>
          </div>
         
          <!-- Submit button with animation -->
          <button type="submit" class="w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white text-center py-4 px-6 rounded-2xl font-bold transition-all duration-300 shadow-lg transform hover:scale-105 hover:shadow-xl flex items-center justify-center">
            <span>Sign In</span>
            <i class="fas fa-sign-in-alt ml-2"></i>
          </button>
         
          <!-- Sign up link -->
          <p class="text-center mt-6 text-white/80">
            Don't have an account yet? <a href="/signup" class="text-cyan-300 hover:text-cyan-200 hover:underline transition duration-300">Sign up</a>
          </p>
        </form>
      </div>
    </main>
  </body>
</html>
<style>
/* Blinking Stars Styles */
  .star {
    position: fixed;
    color: white;
    font-size: 12px;
    pointer-events: none;
    z-index: 5;
    text-shadow: 0 0 6px rgba(255, 255, 255, 0.8);
  }

  @keyframes blink {
    0%, 50% { opacity: 0; }
    51%, 100% { opacity: 1; }
  }

  @keyframes twinkle {
    0%, 100% { opacity: 0.3; transform: scale(1); }
    50% { opacity: 1; transform: scale(1.2); }
  }

  .star-blink {
    animation: blink 2s infinite;
  }

  .star-twinkle {
    animation: twinkle 3s infinite;
  }

  .star-slow {
    animation: blink 4s infinite;
  }
</style>

<script>
  // Blinking Stars Script
  function createStars() {
    const starContainer = document.body;
    const numberOfStars = 50;
    const starSymbols = ['✦', '✧', '⭐', '✨', '⋆', '★', '☆'];
    const animationClasses = ['star-blink', 'star-twinkle', 'star-slow'];

    for (let i = 0; i < numberOfStars; i++) {
      const star = document.createElement('div');
      star.className = 'star';
      
      // Random star symbol
      star.textContent = starSymbols[Math.floor(Math.random() * starSymbols.length)];
      
      // Random position
      let left = Math.random() * 100;
      let top = Math.random() * 100;
      
      // Check if star would overlap with login box area (roughly center area)
      // Login box is roughly centered, so avoid the middle 40% width and height
      const loginBoxLeft = 30; // roughly 30% from left
      const loginBoxRight = 70; // roughly 70% from left
      const loginBoxTop = 20; // roughly 20% from top
      const loginBoxBottom = 80; // roughly 80% from top
      
      // If star would be in login box area, reposition it
      if (left > loginBoxLeft && left < loginBoxRight && top > loginBoxTop && top < loginBoxBottom) {
        // Move to edges instead
        if (Math.random() < 0.5) {
          left = Math.random() < 0.5 ? Math.random() * 25 : 75 + Math.random() * 25; // left or right edge
        } else {
          top = Math.random() < 0.5 ? Math.random() * 15 : 85 + Math.random() * 15; // top or bottom edge
        }
      }
      
      star.style.left = left + '%';
      star.style.top = top + '%';
      
      // Random size
      const size = Math.random() * 8 + 8; // 8px to 16px
      star.style.fontSize = size + 'px';
      
      // Random animation
      const animationClass = animationClasses[Math.floor(Math.random() * animationClasses.length)];
      star.classList.add(animationClass);
      
      // Random animation delay
      star.style.animationDelay = Math.random() * 3 + 's';
      
      // Random opacity
      star.style.opacity = Math.random() * 0.8 + 0.2;
      
      starContainer.appendChild(star);
    }
  }

  // Create stars when page loads
  document.addEventListener('DOMContentLoaded', createStars);

  // Optional: Add more stars periodically
  setInterval(() => {
    // Remove old stars occasionally to prevent too many elements
    const existingStars = document.querySelectorAll('.star');
    if (existingStars.length > 100) {
      existingStars[0].remove();
    }
    
    // Add a new star occasionally
    if (Math.random() < 0.1) { // 10% chance every interval
      const star = document.createElement('div');
      star.className = 'star star-twinkle';
      star.textContent = ['✦', '✧', '⭐', '✨', '⋆'][Math.floor(Math.random() * 5)];
      
      let left = Math.random() * 100;
      let top = Math.random() * 100;
      
      // Avoid login box area for new stars too
      const loginBoxLeft = 30;
      const loginBoxRight = 70;
      const loginBoxTop = 20;
      const loginBoxBottom = 80;
      
      if (left > loginBoxLeft && left < loginBoxRight && top > loginBoxTop && top < loginBoxBottom) {
        if (Math.random() < 0.5) {
          left = Math.random() < 0.5 ? Math.random() * 25 : 75 + Math.random() * 25;
        } else {
          top = Math.random() < 0.5 ? Math.random() * 15 : 85 + Math.random() * 15;
        }
      }
      
      star.style.left = left + '%';
      star.style.top = top + '%';
      star.style.fontSize = (Math.random() * 8 + 8) + 'px';
      star.style.animationDelay = Math.random() * 3 + 's';
      star.style.opacity = Math.random() * 0.8 + 0.2;
      document.body.appendChild(star);
    }
  }, 5000); // Check every 5 seconds
</script>